/// Flutter icons RebbleIcons
/// Copyright (C) 2020 by original authors @ fluttericon.com, fontello.com
/// This font was generated by FlutterIcon.com, which is derived from Fontello.
///
/// To use this font, place it in your fonts/ directory and include the
/// following in your pubspec.yaml
///
/// flutter:
///   fonts:
///    - family:  RebbleIcons
///      fonts:
///       - asset: fonts/RebbleIcons.ttf
///
/// 
///
import 'package:flutter/widgets.dart';

class RebbleIcons {
  RebbleIcons._();

  static const _kFontFam = 'RebbleIcons';
  static const dynamic _kFontPkg = null;

  static const IconData floppy_disk_health_database = IconData(0xe800, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData floppy_disk = IconData(0xe801, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData silence_phone = IconData(0xe802, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData vibrating_watch = IconData(0xe803, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData watch_apps = IconData(0xe804, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData watch_faces = IconData(0xe805, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData health_journal = IconData(0xe806, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData health_heart = IconData(0xe807, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData health_sleep = IconData(0xe808, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData health_steps = IconData(0xe809, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData analytics = IconData(0xe80a, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData developer_settings = IconData(0xe80b, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData sms_messages = IconData(0xe80c, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData rocket = IconData(0xe80d, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData unpair_from_watch = IconData(0xe80e, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData apply_update = IconData(0xe80f, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData check_for_updates = IconData(0xe810, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData disconnect_from_watch = IconData(0xe811, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData connect_to_watch = IconData(0xe812, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData devices = IconData(0xe813, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData plus_add = IconData(0xe814, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData search = IconData(0xe815, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData dictation_microphone = IconData(0xe816, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData system_language = IconData(0xe817, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData about_app = IconData(0xe818, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData share = IconData(0xe819, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData developer_connection_console = IconData(0xe81a, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData rebble_store = IconData(0xe81b, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData settings = IconData(0xe81c, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData notification = IconData(0xe81d, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData unknown_app = IconData(0xe81e, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData locker = IconData(0xe81f, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData send_to_watch_checked = IconData(0xe821, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData timeline_pin = IconData(0xe822, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData menu_horizontal = IconData(0xe823, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData menu_vertical = IconData(0xe824, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData check_done = IconData(0xe825, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData x_close = IconData(0xe826, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData caret_up = IconData(0xe827, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData caret_down = IconData(0xe828, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData caret_left = IconData(0xe829, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData caret_right = IconData(0xe82a, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData drag_handle = IconData(0xe82b, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData delete_trash = IconData(0xe82c, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData send_to_watch_unchecked = IconData(0xe82d, fontFamily: _kFontFam, fontPackage: _kFontPkg);
}
